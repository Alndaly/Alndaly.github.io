"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[3040],{9707:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=s(87462),n=(s(67294),s(3905));s(16758);const r={title:"Clash\u6559\u7a0b"},l=void 0,o={unversionedId:"others/Clash",id:"others/Clash",title:"Clash\u6559\u7a0b",description:"Clash \u5b98\u65b9\u5730\u5740",source:"@site/docs/others/Clash.md",sourceDirName:"others",slug:"/others/Clash",permalink:"/docs/others/Clash",draft:!1,editUrl:"https://github.com/alndaly/alndaly.github.io/edit/docusaurus/docs/others/Clash.md",tags:[],version:"current",lastUpdatedAt:1673153984,formattedLastUpdatedAt:"2023\u5e741\u67088\u65e5",frontMatter:{title:"Clash\u6559\u7a0b"},sidebar:"anyThing",previous:{title:"Anaconda\u73af\u5883\u914d\u7f6e/\u57fa\u672c\u64cd\u4f5c",permalink:"/docs/others/Anaconda/basic-utils"},next:{title:"Curl\u547d\u4ee4\u4f7f\u7528",permalink:"/docs/others/Curl"}},i={},p=[{value:"\u5b89\u88c5 Clash",id:"\u5b89\u88c5-clash",level:2},{value:"\u4fee\u6539\u914d\u7f6e",id:"\u4fee\u6539\u914d\u7f6e",level:2},{value:"<code>config.yml</code> \u914d\u7f6e\u793a\u4f8b",id:"configyml-\u914d\u7f6e\u793a\u4f8b",level:4},{value:"\u7f16\u5199 systemd \u670d\u52a1\u811a\u672c",id:"\u7f16\u5199-systemd-\u670d\u52a1\u811a\u672c",level:2},{value:"\u4e3a\u7528\u6237\u5e10\u6237\u8fd0\u884c clash \u7cfb\u7edf\u5b9e\u4f8b",id:"\u4e3a\u7528\u6237\u5e10\u6237\u8fd0\u884c-clash-\u7cfb\u7edf\u5b9e\u4f8b",level:2},{value:"\u91cd\u65b0\u52a0\u8f7d <code>systemd</code> \u6a21\u5757",id:"\u91cd\u65b0\u52a0\u8f7d-systemd-\u6a21\u5757",level:4},{value:"\u542f\u52a8 <code>clash</code> \u670d\u52a1",id:"\u542f\u52a8-clash-\u670d\u52a1",level:4},{value:"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f",id:"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f",level:4},{value:"\u95ee\u9898",id:"\u95ee\u9898",level:3}],c={toc:p};function u(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Dreamacro/clash"},"Clash \u5b98\u65b9\u5730\u5740")),(0,n.kt)("h2",{id:"\u5b89\u88c5-clash"},"\u5b89\u88c5 Clash"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u4e0b\u8f7d\u5bf9\u5e94\u7684 ",(0,n.kt)("inlineCode",{parentName:"p"},"clash")," \u7248\u672c "),(0,n.kt)("p",{parentName:"li"},"\u4e0b\u8f7d\u5730\u5740\uff1a",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Dreamacro/clash/releases"},"https://github.com/Dreamacro/clash/releases"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u89e3\u538b ",(0,n.kt)("inlineCode",{parentName:"p"},"clash"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u5c06\u89e3\u538b\u51fa\u7684\u6587\u4ef6\u91cd\u547d\u540d\u6210 ",(0,n.kt)("inlineCode",{parentName:"p"},"clash"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u5c06 ",(0,n.kt)("inlineCode",{parentName:"p"},"clash")," \u79fb\u52a8\u5230 ",(0,n.kt)("inlineCode",{parentName:"p"},"/usr/bin/")," \u76ee\u5f55\u4e0b")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u8d4b\u4e88 ",(0,n.kt)("inlineCode",{parentName:"p"},"clash")," \u53ef\u6267\u884c\u6743\u9650"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /usr/bin/clash\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"\u68c0\u67e5 ",(0,n.kt)("inlineCode",{parentName:"p"},"clash")," \u662f\u5426\u5b89\u88c5\u6210\u529f"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"clash -v\n")),(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},"\u8fd4\u56de\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u5b89\u88c5\u6210\u529f\uff1a")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-text"},"Clash v0.13.0-0-g744728c linux 386 Sat Mar 30 06:23:03 UTC 2019\n")))),(0,n.kt)("h2",{id:"\u4fee\u6539\u914d\u7f6e"},"\u4fee\u6539\u914d\u7f6e"),(0,n.kt)("p",null,"\u9ed8\u8ba4\u914d\u7f6e\u76ee\u5f55\u662f ",(0,n.kt)("inlineCode",{parentName:"p"},"$HOME/.config/clash")),(0,n.kt)("p",null,"\u914d\u7f6e\u6587\u4ef6\u7684\u540d\u79f0\u662f ",(0,n.kt)("inlineCode",{parentName:"p"},"config.yml")),(0,n.kt)("p",null,"\u5982\u679c\u8981\u4f7f\u7528\u5176\u4ed6\u76ee\u5f55\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,n.kt)("inlineCode",{parentName:"p"},"-d")," \u63a7\u5236\u914d\u7f6e\u76ee\u5f55"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5f53\u524d\u76ee\u5f55\u4f5c\u4e3a\u914d\u7f6e\u76ee\u5f55")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"clash -d .\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u9ed8\u8ba4\u914d\u7f6e\u76ee\u5f55\u542f\u52a8")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"clash\n")),(0,n.kt)("h4",{id:"configyml-\u914d\u7f6e\u793a\u4f8b"},(0,n.kt)("inlineCode",{parentName:"h4"},"config.yml")," \u914d\u7f6e\u793a\u4f8b"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'# port of HTTP\nport: 7890\n\n# port of SOCKS5\nsocks-port: 7891\n\n# redir port for Linux and macOS\n# redir-port: 7892\n\nallow-lan: false\n\n# Rule / Global/ Direct (default is Rule)\nmode: Rule\n\n# set log level to stdout (default is info)\n# info / warning / error / debug / silent\nlog-level: info\n\n# A RESTful API for clash\nexternal-controller: 127.0.0.1:9090\n\n# you can put the static web resource (such as clash-dashboard) to a directory, and clash would serve in `${API}/ui`\n# input is a relative path to the configuration directory or an absolute path\n# external-ui: folder\n\n# Secret for RESTful API (Optional)\n# secret: ""\n\n# dns:\n  # enable: true # set true to enable dns (default is false)\n  # ipv6: false # default is false\n  # listen: 0.0.0.0:53\n  # enhanced-mode: redir-host\n  # nameserver:\n  #   - 114.114.114.114\n  #   - tls://dns.rubyfish.cn:853 # dns over tls\n  # fallback: # concurrent request with nameserver, fallback used when GEOIP country isn\'t CN\n  #   - tcp://1.1.1.1\n\nProxy:\n\n# shadowsocks\n# The types of cipher are consistent with go-shadowsocks2\n# support AEAD_AES_128_GCM AEAD_AES_192_GCM AEAD_AES_256_GCM AEAD_CHACHA20_POLY1305 AES-128-CTR AES-192-CTR AES-256-CTR AES-128-CFB AES-192-CFB AES-256-CFB CHACHA20-IETF XCHACHA20\n# In addition to what go-shadowsocks2 supports, it also supports chacha20 rc4-md5 xchacha20-ietf-poly1305\n- { name: "ss1", type: ss, server: server, port: 443, cipher: AEAD_CHACHA20_POLY1305, password: "password" }\n\n# old obfs configuration remove after prerelease\n- name: "ss2"\n  type: ss\n  server: server\n  port: 443\n  cipher: AEAD_CHACHA20_POLY1305\n  password: "password"\n  plugin: obfs\n  plugin-opts:\n    mode: tls # or http\n    # host: bing.com\n\n- name: "ss3"\n  type: ss\n  server: server\n  port: 443\n  cipher: AEAD_CHACHA20_POLY1305\n  password: "password"\n  plugin: v2ray-plugin\n  plugin-opts:\n    mode: websocket # no QUIC now\n    # tls: true # wss\n    # skip-cert-verify: true\n    # host: bing.com\n    # path: "/"\n    # headers:\n    #   custom: value\n\n# vmess\n# cipher support auto/aes-128-gcm/chacha20-poly1305/none\n- { name: "vmess", type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto }\n# with tls\n- { name: "vmess", type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto, tls: true }\n# with tls and skip-cert-verify\n- { name: "vmess", type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto, tls: true, skip-cert-verify: true }\n# with ws-path and ws-headers\n- { name: "vmess", type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto, network: ws, ws-path: /path, ws-headers: { Host: v2ray.com } }\n# with ws + tls\n- { name: "vmess", type: vmess, server: server, port: 443, uuid: uuid, alterId: 32, cipher: auto, network: ws, ws-path: /path, tls: true }\n\n# socks5\n- { name: "socks", type: socks5, server: server, port: 443 }\n# socks5 with authentication\n- { name: "socks", type: socks5, server: server, port: 443, username: "username", password: "password" }\n# with tls\n- { name: "socks", type: socks5, server: server, port: 443, tls: true }\n# with tls and skip-cert-verify\n- { name: "socks", type: socks5, server: server, port: 443, tls: true, skip-cert-verify: true }\n\n# http\n- { name: "http", type: http, server: server, port: 443 }\n# http with authentication\n- { name: "http", type: http, server: server, port: 443, username: "username", password: "password" }\n# with tls (https)\n- { name: "http", type: http, server: server, port: 443, tls: true }\n# with tls (https) and skip-cert-verify\n- { name: "http", type: http, server: server, port: 443, tls: true, skip-cert-verify: true }\n\nProxy Group:\n# url-test select which proxy will be used by benchmarking speed to a URL.\n- { name: "auto", type: url-test, proxies: ["ss1", "ss2", "vmess1"], url: "http://www.gstatic.com/generate_204", interval: 300 }\n\n# fallback select an available policy by priority. The availability is tested by accessing an URL, just like an auto url-test group.\n- { name: "fallback-auto", type: fallback, proxies: ["ss1", "ss2", "vmess1"], url: "http://www.gstatic.com/generate_204", interval: 300 }\n\n# load-balance: The request of the same eTLD will be dial on the same proxy.\n- { name: "load-balance", type: load-balance, proxies: ["ss1", "ss2", "vmess1"], url: "http://www.gstatic.com/generate_204", interval: 300 }\n\n# select is used for selecting proxy or proxy group\n# you can use RESTful API to switch proxy, is recommended for use in GUI.\n- { name: "Proxy", type: select, proxies: ["ss1", "ss2", "vmess1", "auto"] }\n\nRule:\n- DOMAIN-SUFFIX,google.com,auto\n- DOMAIN-KEYWORD,google,auto\n- DOMAIN,google.com,auto\n- DOMAIN-SUFFIX,ad.com,REJECT\n- IP-CIDR,127.0.0.0/8,DIRECT\n- SOURCE-IP-CIDR,192.168.1.201/32,DIRECT\n- GEOIP,CN,DIRECT\n# FINAL would remove after prerelease\n# you also can use `FINAL,Proxy` or `FINAL,,Proxy` now\n- MATCH,auto\n')),(0,n.kt)("h2",{id:"\u7f16\u5199-systemd-\u670d\u52a1\u811a\u672c"},"\u7f16\u5199 systemd \u670d\u52a1\u811a\u672c"),(0,n.kt)("p",null,"\u5728 ",(0,n.kt)("inlineCode",{parentName:"p"},"/lib/systemd/system/")," \u76ee\u5f55\u4e0b\u521b\u5efa ",(0,n.kt)("inlineCode",{parentName:"p"},"clash@.service")," \u6587\u4ef6"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo vim /lib/systemd/system/clash@.service\n")),(0,n.kt)("p",null,"\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9(\u4e0d\u7528\u4fee\u6539)\u5e76\u4fdd\u5b58:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"[Unit]\nDescription=A rule based proxy in Go for %i.\nAfter=network.target\n\n[Service]\nType=simple\nUser=%i\nRestart=on-abort\nExecStart=/usr/bin/clash\n\n[Install]\nWantedBy=multi-user.target\n")),(0,n.kt)("h2",{id:"\u4e3a\u7528\u6237\u5e10\u6237\u8fd0\u884c-clash-\u7cfb\u7edf\u5b9e\u4f8b"},"\u4e3a\u7528\u6237\u5e10\u6237\u8fd0\u884c clash \u7cfb\u7edf\u5b9e\u4f8b"),(0,n.kt)("h4",{id:"\u91cd\u65b0\u52a0\u8f7d-systemd-\u6a21\u5757"},"\u91cd\u65b0\u52a0\u8f7d ",(0,n.kt)("inlineCode",{parentName:"h4"},"systemd")," \u6a21\u5757"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,n.kt)("h4",{id:"\u542f\u52a8-clash-\u670d\u52a1"},"\u542f\u52a8 ",(0,n.kt)("inlineCode",{parentName:"h4"},"clash")," \u670d\u52a1"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"user")," \u8868\u793a\u7684\u662f\u5f53\u524d\u7528\u6237\u540d")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start clash@user\n")),(0,n.kt)("p",null,"\u4f8b\u5982\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start clash@sitoi\n")),(0,n.kt)("h4",{id:"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f"},"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable clash@user\n")),(0,n.kt)("h3",{id:"\u95ee\u9898"},"\u95ee\u9898"),(0,n.kt)("p",null,"\u6743\u9650\u4e0d\u8db3"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo systemctl status clash\n\n\u25cf clash.service - A rule based proxy in Go for shitao.\n   Loaded: loaded (/usr/lib/systemd/system/clash.service; disabled; vendor preset: disabled)\n   Active: failed (Result: exit-code) since Tue 2019-06-18 17:27:18 CST; 4s ago\n  Process: 6777 ExecStart=/usr/bin/clash (code=exited, status=203/EXEC)\n Main PID: 6777 (code=exited, status=203/EXEC)\n\nJun 18 17:27:18 localhost.localdomain systemd[1]: Started A rule based proxy in Go for shitao..\nJun 18 17:27:18 localhost.localdomain systemd[6777]: clash.service: Failed to execute command: Permission denied\nJun 18 17:27:18 localhost.localdomain systemd[6777]: clash.service: Failed at step EXEC spawning /usr/bin/clash: Permission denied\nJun 18 17:27:18 localhost.localdomain systemd[1]: clash.service: Main process exited, code=exited, status=203/EXEC\nJun 18 17:27:18 localhost.localdomain systemd[1]: clash.service: Failed with result 'exit-code'.\n")),(0,n.kt)("p",null,"\u4fee\u6539 ",(0,n.kt)("inlineCode",{parentName:"p"},"selinux")," \u6210\u88ab\u52a8\u6a21\u5f0f"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo vim /etc/sysconfig/selinux\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"SELINUX=permissive\n")))}u.isMDXComponent=!0}}]);